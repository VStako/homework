[05.04.2016 9:19:59] Надежда Яцко: №1 - текст задачи для файла index.php

Домашнее задание от 02.04.2016

Рассылка для группы: 19.03_Т_Сб(10.00-14.00)_Михаил

Сегодня изучали:
Массивы – суть, декларация. Индексные и ассоциативные. Многомерные массивы.  Чтение и изменение значений в массивах.
Управляющие конструкции (if/else/elseif, switch/case/break, for/continue, foreach.
Создание функций. Вызов. Передача аргументов - обязательные/необязательные.
Области видимости.
Получение/изменение переменных из глобальной области.
Ссылки. Возврат значений функциями. Рекурсии.
Разыменование массива - напрямую обращаться к индексу массива, который является результатом выполнения функции, - не создавая отдельную переменную.
Статические переменные, их особенности и применение.

Домашнее задание:
Цель задания: закрепить на практике работу с массивами, управляющими конструкциями и функциями.
Тематика задания - "Машины в нашем обществе".
Создайте на GitHub новый проект. Сделайте `git clone` этого проекта себе на компьютер.
Сопутствующие файлы прикреплены к проекту.
В файле `index.php` находяться массивы данных с которыми вы будете работать. Также в этом файле есть комментарии к каждому массиву.
Суть задачи: связать между собой разные массивы данных.
Примечание: В функциях не должно быть конструкции `echo`. Функция должна возвращать результат, а потом уже и выводите его.
Написать такие функции:
1. `get_country(id)` - Получение страны по ее ID.
2. `get_country_city(city_id)` - Получение страны по ID города.
3. `get_cities_country(country_id)` - Получение списка всех городов, которые принадлежат стране по ее ID.
4 `get_city(id)` - Получение города по его ID.
5. `get_user(id)` - Получение пользователя по его ID. Если ID пользователя не найден, то выдаем ошибку, что пользователь не найден по такому-то ID.
6. `create_user_full_name(first_name, last_name, second_name)` - Функция, которая объеденяет имя, фамилию и отчество пользователя в полное его имя.
7. `get_user_full_name(id)` - Получение полного имени пользователя по его ID.
8. `get_car(id)` - Получение машины по ее ID.
9. `get_users(ids)` - Получение списка пользователей, где параметр `ids` - массив списка пользователей, которых нужно получить. Если ID пользователя не найден, то выдаем предупреждение, что пользователь не найден по такому-то ID.
10. `search_user(options)` - Поиск пользователя по параметрам, где `options` - массив, где ключ в массиве это параметр, по которому можно найти пользователя, а значение используется для строгого сравнения, если тип данных равен: `integer`, `float`, а также частичное сравнение, если поиск происходит по имени пользователя или текстовым значениям, то есть `string`.
Массив `options` может быть таким:
[
"id" => 1,
"first_name" => "Вале" // Имя введено не полностью, то есть должно быть частичное совпадение строк
]
Все параметры указанные в `options` должны использоваться вместе, то есть `and`, а не `or`. Например, мы сможем найти пользователя по данным параметрам, потому то у пользователя "Валентин" ID = 1, но не сможем найти, если изменим ID на 2, или строку имени на "Виктория", потому что у нее совершенно другой ID.
11. `change_user_pasword(user_id, old_password, new_password)` - Функция для смена пароля пользователя. Успешная смена пароля произойдет только в том случае, если старый пароль был введен верно, иначе генерируем ошибку.
12. `get_cars_user(user_id)` - Вывод списка машин пользователя. Если машин у пользователя нет, то функция должна вернуть `null`.
13. `get_users_car(car_id)` - По ID машины вывести всех пользователей, которые приобрели данную машину.
[05.04.2016 9:20:41] Надежда Яцко: №2 - Выполнить задачи - https://github.com/oleg-shumar/php-academy.kiev.ua/tree/master/arrays_loops_tasks
№3 - Пройти http://devionity.com/ru/courses/php-fundamentals - до конца, сделайте упор на функции.