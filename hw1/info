[22:45:28] Надежда Яцко: задачи по пхп - https://github.com/oleg-shumar/php-academy.kiev.ua/tree/master/php_basics_tasks


[22:46:02] Надежда Яцко: задание по гиту:
1. Пройдите руководство
https://docs.google.com/document/d/16GUpa-t9iBAct1EVcebbRZGEOzqafk7zb7cX8JGwLlg/edit?usp=sharing
Создать новый проект на Github (название на Ваше усмотрение).
Сделать checkout проекта из github на локальный компьютер. Далее в этом проекте Вы будете делать текущее задание.
Создайте новую ветку, она будет нужна для написания в ней html кода, то есть назвать, Вы ее можете соответственно, например: front, а так же потребуется еще одна ветка для написание php кода, как пример названия - это backend.
Напоминание: если вы создали ветку front, то автоматически в ней и окажитесь, вернитесь в ветку master для создания новой ветки backend, иначе, Вы сделаете отвлетвление от ветки front, а не от главной, то есть master. Перейдите в ветку front (git checkout front).
Создайте html файл, назвать Вы его можете main.html или как Вам угодно. HTML файл может содержать в себе любую текстовую информацию, например "Hello world", добавьте ее, сохраните. Потом сделайте слитие ветки front в master. Перейдите в ветку backend и создайте файл index.php. Сдейте rebase master в текущую ветку. В файле index.php подключите файл main.html (выражение include).
Если у Вас всё правильно сделано, то к этому этапу у вас должно быть две дополнительные ветки, не считая master, front и backend. Также, на данном этапе в вашей директории уже есть 2 файла main.html и index.php (вы находитесь в ветке backend). При старте проекта, браузер или через консоль, у вас будет отображаться содержимое файла main.html.
Создайте новую ветку, она будет нужна для изменения информации в main.html, назвать ее можно, как fix_main. Перейдите в ветку fix_main и измените информацию в файле main.html. Сделайте коммит изменений и объедините ветку fix_main с master. Перейдите в ветку backend и сделайте rebase из master (файл main.html должен обновиться, и в нем уже будет новая информация). Запустите проект, - проверьте.
Сделайте слитие ветки backend c master. Создайте новую ветку is001_backend, Вы в ней будете делать правки с index.php. Перейдите в ветку is001_backend, если Вы еще не в ней. Добавьте перед include "main.html" условие, по которому будет подгружаться HTML файл (выражение в условии на ваше усмотрение). После написания условия включения файла проверьте запуск проекта. Сделайте слияние ветки is001_backend с мастер. Перейдите в ветку master и проверьте работоспособность проекта


[22:46:53] Надежда Яцко: Задание по html:
Разработать XHTML документ, который функционально будет состоять
из 3-х частей:
шапка (header), область контента (content) и нижняя часть страницы (footer).
Размер 3х контейнеров должен быть 970px и они должны быть выровнены по центру web-документа. Стили для HTML документа должны быть написаны в css файле и подключаться к документу в теге &lt;head.
Для этих основных контейнеров должны быть назначены индентификаторы, по которым в CSS Вы будете привязывать стили. Внутри контейнеров уже должны будут использоваться классы.
В шапке страницы должно быть горизонтальное меню (разрабатывается с помощью &lt;ul, &lt;li).
Набор элементов меню на ваше усмотрение (Например категории товаров).
Меню должно быть одного уровня вложенности, если сделаете более 1, то это будет только плюсом (только CSS, JavaScript не использовать).
После меню должно быть фоновое изображение (background), по ширине, как меню, а по высоте "scroll" (css background scroll).
После фонового изображения начинается контент, то есть центральная часть страницы, которая должна иметь отступ от фонового изображения меню в 15px и внутренние оступты (padding) в 15px. Контент-контейнер должен быть обведен в рамку с радиусом скругления краев в 7px. Шрифт и цветовая палитра HTML страницы на ваше усмотрение.
Внутри контент-контейнера должна быть таблица, которая по умолчанию будет содержать в себе 3 записи о зарегистрированных пользователях в системе, где колонками в таблице должно быть Ф.И.О, дата рожения, контактная информация, дата регистрации пользователя.
Ниже, под таблицей, должна находиться форма регистрации пользователя с теми же полями, что и колонки в выше описанной таблице + поле для ввода пароля и его подтверждение. Стили полей ввода: ширина - 200px, высота - 20px, обводка - 1px с серым цветом (Например #CCC), с радиусом скругления краев в 3px.
К каждому полю привязать тег &lt;label, где написать название поля. &lt;Label должен находиться с левой стороны от поля ввода, при этом сами поля ввода должны быть выровнены по левому краю.
Кнопка для отправки формы в 50px ширины и 20px по высоте, обводка - 1px (цвет уже сами выберите, в зависимости от фонового цвета кнопки), с радиусом скругления краев в 3px и фоновым цветом кнопки (на усмотрение). Кнопка должна находиться в нижней части, после полей ввода, и выровнена по центу полей ввода. Нижняя часть страницы, то есть так называемый футер должен так же быть обведен в рамку, как и контент-контейнер, но скругление углов только верхний левый и правый угол. Футер должен "приклеиваться" к нижней
части документа (Подсказка: position:absolute).

Прочитать до конца:
http://devionity.com/ru/courses/html-fundamentals
http://devionity.com/ru/courses/css-fundamentals
По возможности начать читать -
http://devionity.com/ru/courses/php-fundamentals - п 1-10.

------Урок №2:
2) Пройти http://devionity.com/ru/courses/php-fundamentals - с 1 по 21 включительно, выполняя задания из уроков!
3) Пройти https://www.codecademy.com/learn/php с 1 по 2 модуль